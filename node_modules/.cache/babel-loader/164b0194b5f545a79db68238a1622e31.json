{"ast":null,"code":"import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n\n    const axios = require(\"axios\");\n\n    axios.post(\"http://127.0.0.1:4000/api/token\", {\n      token: refresh\n    }).then(response => {\n      localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    }).catch(function (error) {\n      console.log(\"error:\", error);\n    });\n  };\n\n  async function getData(email, password) {\n    const url = \"http://127.0.0.1:4000/api/login\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Response Status: ${response.status}`);\n      }\n\n      const json = await response.json();\n      localStorage.setItem(\"access\", JSON.stringify(json.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(json.refresh));\n      console.log(\"json\", json);\n    } catch (error) {\n      console.log(\"error:\", error.message);\n    }\n  }\n\n  function login(email, password) {\n    // return new Promise((resolve, reject) => {\n    getData(email, password); // fetchPromise\n    //   .then((response) => response.body)\n    //   .then((body) => {\n    //     const reader = body.getReader();\n    //     console.log(\"reader:\", reader);\n    //     // resolve(data);\n    //     // localStorage.setItem(\"access\", JSON.stringify(data.access));\n    //     // localStorage.setItem(\"refresh\", JSON.stringify(data.refresh));\n    //   })\n    //   .catch((error) => {\n    //     // reject(error);\n    //     console.log(\"error:\", error);\n    //   });\n    // });\n  }\n\n  const sendPostRequest = (url, data) => {\n    const sendRequest = fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        jwt: \"\"\n      }\n    });\n  };\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh\n    });\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest\n  };\n}\n\nexport default useJWT;","map":{"version":3,"sources":["D:/Quera/jwt-auth/src/Hooks/useJWT.js"],"names":["React","useJWT","refreshToken","refresh","localStorage","getItem","axios","require","post","token","then","response","setItem","JSON","stringify","data","access","catch","error","console","log","getData","email","password","url","fetch","method","body","headers","ok","Error","status","json","message","login","sendPostRequest","sendRequest","jwt","logout","delete","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n    const axios = require(\"axios\");\n    axios\n      .post(\"http://127.0.0.1:4000/api/token\", {\n        token: refresh,\n      })\n      .then((response) => {\n        localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n        localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n      })\n      .catch(function (error) {\n        console.log(\"error:\", error);\n      });\n  };\n\n  async function getData(email, password) {\n    const url = \"http://127.0.0.1:4000/api/login\";\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Response Status: ${response.status}`);\n      }\n\n      const json = await response.json();\n      localStorage.setItem(\"access\", JSON.stringify(json.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(json.refresh));\n      console.log(\"json\", json);\n    } catch (error) {\n      console.log(\"error:\", error.message);\n    }\n  }\n\n  function login(email, password) {\n    // return new Promise((resolve, reject) => {\n    getData(email, password);\n\n    // fetchPromise\n    //   .then((response) => response.body)\n    //   .then((body) => {\n    //     const reader = body.getReader();\n    //     console.log(\"reader:\", reader);\n    //     // resolve(data);\n    //     // localStorage.setItem(\"access\", JSON.stringify(data.access));\n    //     // localStorage.setItem(\"refresh\", JSON.stringify(data.refresh));\n    //   })\n    //   .catch((error) => {\n    //     // reject(error);\n    //     console.log(\"error:\", error);\n    //   });\n    // });\n  }\n\n  const sendPostRequest = (url, data) => {\n    const sendRequest = fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        jwt: \"\",\n      },\n    });\n  };\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh,\n    });\n\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest,\n  };\n}\n\nexport default useJWT;\n"]},"metadata":{},"sourceType":"module"}