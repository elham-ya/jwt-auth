{"ast":null,"code":"import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n\n    const axios = require(\"axios\");\n\n    axios.post(\"http://127.0.0.1:4000/api/token\", {\n      token: refresh\n    }).then(response => {\n      localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    }).catch(function (error) {\n      console.log(\"error:\", error);\n    });\n  };\n\n  function login(email, password) {\n    // let myPromise = new async Promise(function (myResolve, myReject) {\n    const fetchPromise = fetch(\"http://127.0.0.1:4000/api/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    fetchPromise.then(data => data.json()).then(data => {\n      myResolve(data);\n      console.log(\"data:\", data);\n    }).catch(error => {\n      myReject(error);\n      console.log(\"error:\", error);\n    }); // });\n\n    myPromise.then(data => console.log(\"myPromise:\", data)); // localStorage.setItem(\"access\", JSON.stringify(resp.data.access));\n    // localStorage.setItem(\"refresh\", JSON.stringify(resp.data.refresh));\n    // let promise = new Promise((resolve, reject) => {\n    //   let request = fetch(\"http://127.0.0.1:4000/api/login\", {\n    //     method: \"POST\",\n    //     body: { email, password },\n    //   });\n    //     request.then((resp) => {\n    //       if (resp.ok) {\n    //         localStorage.setItem(\"access\", JSON.stringify(resp.data.access));\n    //         localStorage.setItem(\n    //           \"refresh\",\n    //           JSON.stringify(resp.data.refresh)\n    //         );\n    //       } else {\n    //         reject(Error(resp));\n    //       }\n    //     })\n    //     .then((json) => {\n    //       resolve(json);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     });\n    // });\n    // const axios = require(\"axios\");\n    // axios\n    //   .post(\"http://127.0.0.1:4000/api/login\", {\n    //     email,\n    //     password,\n    //   })\n    //   .then((response) => {\n    //     localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n    //     localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(\"error:\", error);\n    //   });\n  }\n\n  const sendPostRequest = (url, data) => {};\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh\n    });\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest\n  };\n}\n\nexport default useJWT;","map":{"version":3,"sources":["D:/Quera/jwt-auth/src/Hooks/useJWT.js"],"names":["React","useJWT","refreshToken","refresh","localStorage","getItem","axios","require","post","token","then","response","setItem","JSON","stringify","data","access","catch","error","console","log","login","email","password","fetchPromise","fetch","method","body","json","myResolve","myReject","myPromise","sendPostRequest","url","logout","delete","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;;AACA,UAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,IAAAA,KAAK,CACFE,IADH,CACQ,iCADR,EAC2C;AACvCC,MAAAA,KAAK,EAAEN;AADgC,KAD3C,EAIGO,IAJH,CAISC,QAAD,IAAc;AAClBP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAT,CAAcC,MAA7B,CAA/B;AACAZ,MAAAA,YAAY,CAACQ,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAT,CAAcZ,OAA7B,CAAhC;AACD,KAPH,EAQGc,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACD,KAVH;AAWD,GAdD;;AAgBA,WAASG,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B;AACE,UAAMC,YAAY,GAAIC,KAAK,CAAC,iCAAD,EAAoC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,IAAI,EAAEd,IAAI,CAACC,SAAL,CAAe;AACnBQ,QAAAA,KADmB;AAEnBC,QAAAA;AAFmB,OAAf;AAFuD,KAApC,CAA3B;AAQAC,IAAAA,YAAY,CACTd,IADH,CACSK,IAAD,IAAUA,IAAI,CAACa,IAAL,EADlB,EAEGlB,IAFH,CAESK,IAAD,IAAU;AACdc,MAAAA,SAAS,CAACd,IAAD,CAAT;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AACD,KALH,EAMGE,KANH,CAMUC,KAAD,IAAW;AAChBY,MAAAA,QAAQ,CAACZ,KAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACD,KATH,EAV4B,CAoB9B;;AAEAa,IAAAA,SAAS,CAACrB,IAAV,CAAgBK,IAAD,IAAUI,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,IAA1B,CAAzB,EAtB8B,CAwB9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,QAAMiB,eAAe,GAAG,CAACC,GAAD,EAAMlB,IAAN,KAAe,CAAE,CAAzC;;AAEA,MAAIZ,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;;AAEA,QAAM6B,MAAM,GAAG,MAAM;AACnB,UAAM5B,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,IAAAA,KAAK,CAAC6B,MAAN,CAAa,kCAAb,EAAiD;AAC/ChC,MAAAA;AAD+C,KAAjD;AAIAC,IAAAA,YAAY,CAACgC,KAAb;AACD,GAPD;;AASA,SAAO;AACLf,IAAAA,KADK;AAELa,IAAAA,MAFK;AAGLhC,IAAAA,YAHK;AAIL8B,IAAAA;AAJK,GAAP;AAMD;;AAED,eAAe/B,MAAf","sourcesContent":["import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n    const axios = require(\"axios\");\n    axios\n      .post(\"http://127.0.0.1:4000/api/token\", {\n        token: refresh,\n      })\n      .then((response) => {\n        localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n        localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n      })\n      .catch(function (error) {\n        console.log(\"error:\", error);\n      });\n  };\n\n  function login(email, password) {\n    // let myPromise = new async Promise(function (myResolve, myReject) {\n      const fetchPromise =  fetch(\"http://127.0.0.1:4000/api/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n\n      fetchPromise\n        .then((data) => data.json())\n        .then((data) => {\n          myResolve(data);\n          console.log(\"data:\", data);\n        })\n        .catch((error) => {\n          myReject(error);\n          console.log(\"error:\", error);\n        });\n    // });\n\n    myPromise.then((data) => console.log(\"myPromise:\", data));\n\n    // localStorage.setItem(\"access\", JSON.stringify(resp.data.access));\n    // localStorage.setItem(\"refresh\", JSON.stringify(resp.data.refresh));\n\n    // let promise = new Promise((resolve, reject) => {\n    //   let request = fetch(\"http://127.0.0.1:4000/api/login\", {\n    //     method: \"POST\",\n    //     body: { email, password },\n    //   });\n    //     request.then((resp) => {\n    //       if (resp.ok) {\n    //         localStorage.setItem(\"access\", JSON.stringify(resp.data.access));\n    //         localStorage.setItem(\n    //           \"refresh\",\n    //           JSON.stringify(resp.data.refresh)\n    //         );\n    //       } else {\n    //         reject(Error(resp));\n    //       }\n    //     })\n    //     .then((json) => {\n    //       resolve(json);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     });\n    // });\n\n    // const axios = require(\"axios\");\n    // axios\n    //   .post(\"http://127.0.0.1:4000/api/login\", {\n    //     email,\n    //     password,\n    //   })\n    //   .then((response) => {\n    //     localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n    //     localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(\"error:\", error);\n    //   });\n  }\n\n  const sendPostRequest = (url, data) => {};\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh,\n    });\n\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest,\n  };\n}\n\nexport default useJWT;\n"]},"metadata":{},"sourceType":"module"}