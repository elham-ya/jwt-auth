{"ast":null,"code":"import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n\n    const axios = require(\"axios\");\n\n    axios.post(\"http://127.0.0.1:4000/api/token\", {\n      token: refresh\n    }).then(response => {\n      localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    }).catch(function (error) {\n      console.log(\"error:\", error);\n    });\n  };\n\n  function login(email, password) {\n    return new Promise((resolve, reject) => {\n      const fetchPromise = fetch(\"http://127.0.0.1:4000/api/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      fetchPromise.then(response => console.log(\"res:\", response)).then(response => {\n        resolve(response);\n        localStorage.setItem(\"access\", JSON.stringify(response.access));\n        localStorage.setItem(\"refresh\", JSON.stringify(response.refresh));\n      }).catch(error => {\n        reject(error);\n        console.log(\"error:\", error);\n      });\n    });\n  }\n\n  const sendPostRequest = (url, data) => {\n    const sendRequest = fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"jwt\": \"\"\n      }\n    });\n  };\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh\n    });\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest\n  };\n}\n\nexport default useJWT;","map":{"version":3,"sources":["D:/Quera/jwt-auth/src/Hooks/useJWT.js"],"names":["React","useJWT","refreshToken","refresh","localStorage","getItem","axios","require","post","token","then","response","setItem","JSON","stringify","data","access","catch","error","console","log","login","email","password","Promise","resolve","reject","fetchPromise","fetch","method","body","headers","sendPostRequest","url","sendRequest","logout","delete","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n    const axios = require(\"axios\");\n    axios\n      .post(\"http://127.0.0.1:4000/api/token\", {\n        token: refresh,\n      })\n      .then((response) => {\n        localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n        localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n      })\n      .catch(function (error) {\n        console.log(\"error:\", error);\n      });\n  };\n\n  function login(email, password) {\n    return new Promise((resolve, reject) => {\n      const fetchPromise = fetch(\"http://127.0.0.1:4000/api/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n\n      fetchPromise\n        .then((response) => console.log(\"res:\", response))\n        .then((response) => {\n          resolve(response);\n          localStorage.setItem(\"access\", JSON.stringify(response.access));\n          localStorage.setItem(\"refresh\", JSON.stringify(response.refresh));\n        })\n        .catch((error) => {\n          reject(error);\n          console.log(\"error:\", error);\n        });\n    });\n  }\n\n  const sendPostRequest = (url, data) => {\n    const sendRequest = fetch(url,{\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"jwt\": \"\"\n      }\n    })\n  };\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh,\n    });\n\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest,\n  };\n}\n\nexport default useJWT;\n"]},"metadata":{},"sourceType":"module"}