{"ast":null,"code":"import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n\n    const axios = require(\"axios\");\n\n    axios.post(\"http://127.0.0.1:4000/api/token\", {\n      token: refresh\n    }).then(response => {\n      localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    }).catch(function (error) {\n      console.log(\"error:\", error);\n    });\n  };\n\n  async function getData() {\n    const url = \"http://127.0.0.1:4000/api/login\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n    } catch (error) {}\n  }\n\n  function login(email, password) {\n    // return new Promise((resolve, reject) => {\n    const fetchPromise = fetch(\"http://127.0.0.1:4000/api/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n    fetchPromise.then(response => response.body).then(body => {\n      const reader = body.getReader();\n      console.log(\"reader:\", reader); // resolve(data);\n      // localStorage.setItem(\"access\", JSON.stringify(data.access));\n      // localStorage.setItem(\"refresh\", JSON.stringify(data.refresh));\n    }).catch(error => {\n      // reject(error);\n      console.log(\"error:\", error);\n    }); // });\n  }\n\n  const sendPostRequest = (url, data) => {\n    const sendRequest = fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        jwt: \"\"\n      }\n    });\n  };\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh\n    });\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest\n  };\n}\n\nexport default useJWT;","map":{"version":3,"sources":["D:/Quera/jwt-auth/src/Hooks/useJWT.js"],"names":["React","useJWT","refreshToken","refresh","localStorage","getItem","axios","require","post","token","then","response","setItem","JSON","stringify","data","access","catch","error","console","log","getData","url","fetch","method","body","email","password","headers","login","fetchPromise","reader","getReader","sendPostRequest","sendRequest","jwt","logout","delete","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n    const axios = require(\"axios\");\n    axios\n      .post(\"http://127.0.0.1:4000/api/token\", {\n        token: refresh,\n      })\n      .then((response) => {\n        localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n        localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n      })\n      .catch(function (error) {\n        console.log(\"error:\", error);\n      });\n  };\n\n  async function getData() {\n    const url = \"http://127.0.0.1:4000/api/login\";\n    try {\n      const response =await fetch(url, \n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        })\n    }\n    catch(error) {\n      \n    }\n  }\n\n  function login(email, password) {\n    // return new Promise((resolve, reject) => {\n      const fetchPromise = fetch(\"http://127.0.0.1:4000/api/login\", \n        {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n\n      fetchPromise\n        .then((response) => response.body)\n        .then((body) => {\n          const reader = body.getReader();\n          console.log(\"reader:\", reader);\n          // resolve(data);\n          // localStorage.setItem(\"access\", JSON.stringify(data.access));\n          // localStorage.setItem(\"refresh\", JSON.stringify(data.refresh));\n        })\n        .catch((error) => {\n          // reject(error);\n          console.log(\"error:\", error);\n        });\n    // });\n  }\n\n  const sendPostRequest = (url, data) => {\n    const sendRequest = fetch(url, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        jwt: \"\",\n      },\n    });\n  };\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh,\n    });\n\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest,\n  };\n}\n\nexport default useJWT;\n"]},"metadata":{},"sourceType":"module"}