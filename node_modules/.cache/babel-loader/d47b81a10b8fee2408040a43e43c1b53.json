{"ast":null,"code":"import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n\n    const axios = require(\"axios\");\n\n    axios.post(\"http://127.0.0.1:4000/api/token\", {\n      token: refresh\n    }).then(response => {\n      localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n      localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    }).catch(function (error) {\n      console.log(\"error:\", error);\n    });\n  };\n\n  function login(email, password) {\n    let promise = new Promise((resolve, reject) => {\n      let request = fetch(\"http://127.0.0.1:4000/api/login\", {\n        method: \"POST\",\n        body: {\n          email,\n          password\n        }\n      }).then(resp => {\n        if (resp.ok) {\n          localStorage.setItem(\"access\", JSON.stringify(resp.data.access));\n          localStorage.setItem(\"refresh\", JSON.stringify(resp.data.refresh));\n        } else {\n          reject(Error(resp));\n        }\n      }).then(json => {\n        resolve(json);\n      }).catch(error => {\n        console.log(error);\n      });\n    }); // const axios = require(\"axios\");\n    // axios\n    //   .post(\"http://127.0.0.1:4000/api/login\", {\n    //     email,\n    //     password,\n    //   })\n    //   .then((response) => {\n    //     localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n    //     localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(\"error:\", error);\n    //   });\n  }\n\n  const sendPostRequest = (url, data) => {};\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh\n    });\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest\n  };\n}\n\nexport default useJWT;","map":{"version":3,"sources":["D:/Quera/jwt-auth/src/Hooks/useJWT.js"],"names":["React","useJWT","refreshToken","refresh","localStorage","getItem","axios","require","post","token","then","response","setItem","JSON","stringify","data","access","catch","error","console","log","login","email","password","promise","Promise","resolve","reject","request","fetch","method","body","resp","ok","Error","json","sendPostRequest","url","logout","delete","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;;AACA,UAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,IAAAA,KAAK,CACFE,IADH,CACQ,iCADR,EAC2C;AACvCC,MAAAA,KAAK,EAAEN;AADgC,KAD3C,EAIGO,IAJH,CAISC,QAAD,IAAc;AAClBP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAT,CAAcC,MAA7B,CAA/B;AACAZ,MAAAA,YAAY,CAACQ,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAT,CAAcZ,OAA7B,CAAhC;AACD,KAPH,EAQGc,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACD,KAVH;AAWD,GAdD;;AAgBA,WAASG,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAE5B,QAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7C,UAAIC,OAAO,GAAGC,KAAK,CAAC,iCAAD,EAAoC;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDC,QAAAA,IAAI,EAAE;AAAET,UAAAA,KAAF;AAASC,UAAAA;AAAT;AAF+C,OAApC,CAAL,CAIXb,IAJW,CAILsB,IAAD,IAAU;AACd,YAAIA,IAAI,CAACC,EAAT,EAAa;AACX7B,UAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAekB,IAAI,CAACjB,IAAL,CAAUC,MAAzB,CAA/B;AACAZ,UAAAA,YAAY,CAACQ,OAAb,CACE,SADF,EAEEC,IAAI,CAACC,SAAL,CAAekB,IAAI,CAACjB,IAAL,CAAUZ,OAAzB,CAFF;AAID,SAND,MAMO;AACLwB,UAAAA,MAAM,CAACO,KAAK,CAACF,IAAD,CAAN,CAAN;AACD;AACF,OAdW,EAeXtB,IAfW,CAeLyB,IAAD,IAAU;AACdT,QAAAA,OAAO,CAACS,IAAD,CAAP;AACD,OAjBW,EAkBXlB,KAlBW,CAkBJC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OApBW,CAAd;AAqBD,KAtBa,CAAd,CAF4B,CA2B9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,QAAMkB,eAAe,GAAG,CAACC,GAAD,EAAMtB,IAAN,KAAe,CAAE,CAAzC;;AAEA,MAAIZ,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;;AAEA,QAAMiC,MAAM,GAAG,MAAM;AACnB,UAAMhC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,IAAAA,KAAK,CAACiC,MAAN,CAAa,kCAAb,EAAiD;AAC/CpC,MAAAA;AAD+C,KAAjD;AAIAC,IAAAA,YAAY,CAACoC,KAAb;AACD,GAPD;;AASA,SAAO;AACLnB,IAAAA,KADK;AAELiB,IAAAA,MAFK;AAGLpC,IAAAA,YAHK;AAILkC,IAAAA;AAJK,GAAP;AAMD;;AAED,eAAenC,MAAf","sourcesContent":["import React from \"react\";\n\nfunction useJWT() {\n  const refreshToken = () => {\n    let refresh = localStorage.getItem(\"refresh\");\n    const axios = require(\"axios\");\n    axios\n      .post(\"http://127.0.0.1:4000/api/token\", {\n        token: refresh,\n      })\n      .then((response) => {\n        localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n        localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n      })\n      .catch(function (error) {\n        console.log(\"error:\", error);\n      });\n  };\n\n  function login(email, password) {\n    \n      let promise = new Promise((resolve, reject) => {\n        let request = fetch(\"http://127.0.0.1:4000/api/login\", {\n          method: \"POST\",\n          body: { email, password },\n        })\n          .then((resp) => {\n            if (resp.ok) {\n              localStorage.setItem(\"access\", JSON.stringify(resp.data.access));\n              localStorage.setItem(\n                \"refresh\",\n                JSON.stringify(resp.data.refresh)\n              );\n            } else {\n              reject(Error(resp));\n            }\n          })\n          .then((json) => {\n            resolve(json);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n    \n\n    // const axios = require(\"axios\");\n    // axios\n    //   .post(\"http://127.0.0.1:4000/api/login\", {\n    //     email,\n    //     password,\n    //   })\n    //   .then((response) => {\n    //     localStorage.setItem(\"access\", JSON.stringify(response.data.access));\n    //     localStorage.setItem(\"refresh\", JSON.stringify(response.data.refresh));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(\"error:\", error);\n    //   });\n  }\n\n  const sendPostRequest = (url, data) => {};\n\n  let refresh = localStorage.getItem(\"refresh\");\n\n  const logout = () => {\n    const axios = require(\"axios\");\n    axios.delete(\"http://127.0.0.1:4000/api/logout\", {\n      refresh,\n    });\n\n    localStorage.clear();\n  };\n\n  return {\n    login,\n    logout,\n    refreshToken,\n    sendPostRequest,\n  };\n}\n\nexport default useJWT;\n"]},"metadata":{},"sourceType":"module"}