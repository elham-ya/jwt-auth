{"ast":null,"code":"var _jsxFileName = \"D:\\\\jwt-auth\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    login\n  } = useJWT();\n\n  const handleLogin = () => {\n    if (email && password) {\n      login(email, password);\n    }\n  };\n\n  const [disable, setDisable] = useState({\n    userName: true,\n    password: true\n  });\n\n  const handleChangeUserNameInput = e => {\n    if (e && e.target.value && e.target.value.trim().length !== 0) {\n      setDisable(prev => ({ ...prev,\n        userName: false\n      }));\n    } else {\n      setDisable(prev => ({ ...prev,\n        userName: true\n      }));\n    }\n  };\n\n  const handleChangeUserPassword = e => {\n    if (e && e.target.value && e.target.value.trim().length !== 0) {\n      setDisable(prev => ({ ...prev,\n        password: false\n      }));\n    } else {\n      setDisable(prev => ({ ...prev,\n        password: true\n      }));\n    }\n  };\n\n  const handleButtonDisable = () => {\n    if (disable.userName && disable.password) {\n      return true;\n    } else if (disable.userName && !disable.password) {\n      return true;\n    } else if (!disable.userName && disable.password) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  console.log(\"disable:\", disable);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"email\",\n      label: \"\\u2709\\uFE0F Email\",\n      type: \"email\",\n      defaultValue: email,\n      onBlur: event => {\n        setEmail(event.target.value);\n      },\n      autoFocus: true,\n      tabIndex: \"1\",\n      pattern: \".+@example\\\\.com\",\n      onChange: handleChangeUserNameInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"password\",\n      label: \"\\uD83D\\uDD11 Password\",\n      type: \"password\",\n      defaultValue: password,\n      onBlur: e => {\n        setPassword(e.target.value);\n      },\n      tabIndex: \"2\",\n      onChange: handleChangeUserPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotRobot, {\n      checked: true,\n      onChange: () => {\n        handleNoRobotCheck;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      type: \"button\",\n      onClick: handleLogin,\n      disabled: handleButtonDisable()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"WLhfIxcGGvzPlurYu2WYR+nURGY=\", false, function () {\n  return [useJWT];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/jwt-auth/src/Pages/Login.jsx"],"names":["React","useState","useNavigate","Card","Input","NotRobot","LoginButton","ErrorMessage","useJWT","Login","props","email","setEmail","password","setPassword","login","handleLogin","disable","setDisable","userName","handleChangeUserNameInput","e","target","value","trim","length","prev","handleChangeUserPassword","handleButtonDisable","console","log","event","handleNoRobotCheck"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = useJWT();\n\n  const handleLogin = () => {\n    if (email && password) {\n      login(email, password);\n    }\n  };\n\n  const [disable, setDisable] = useState({\n    userName: true,\n    password: true,\n  });\n\n  const handleChangeUserNameInput = (e) => {\n    if (e && e.target.value && e.target.value.trim().length !== 0) {\n      setDisable((prev) => ({ ...prev, userName: false }));\n    } else {\n      setDisable((prev) => ({ ...prev, userName: true }));\n    }\n  };\n\n  const handleChangeUserPassword = (e) => {\n    if (e && e.target.value && e.target.value.trim().length !== 0) {\n      setDisable((prev) => ({ ...prev, password: false }));\n    } else {\n      setDisable((prev) => ({ ...prev, password: true }));\n    }\n  };\n\n  const handleButtonDisable = () => {\n    if (disable.userName && disable.password) {\n      return true;\n    } else if (disable.userName && !disable.password) {\n      return true;\n    } else if (!disable.userName && disable.password) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  console.log(\"disable:\", disable);\n\n  return (\n    <Card>\n      <h3>Login</h3>\n      <Input\n        data-testid=\"email\"\n        label=\"✉️ Email\"\n        type=\"email\"\n        defaultValue={email}\n        onBlur={(event) => {\n          setEmail(event.target.value);\n        }}\n        autoFocus\n        tabIndex=\"1\"\n        pattern=\".+@example\\.com\"\n        onChange={handleChangeUserNameInput}\n      />\n      <Input\n        data-testid=\"password\"\n        label=\"🔑 Password\"\n        type=\"password\"\n        defaultValue={password}\n        onBlur={(e) => {\n          setPassword(e.target.value);\n        }}\n        tabIndex=\"2\"\n        onChange={handleChangeUserPassword}\n      />\n\n      <NotRobot checked={true} onChange={() => {handleNoRobotCheck}} />\n      <ErrorMessage />\n\n      <LoginButton\n        type=\"button\"\n        onClick={handleLogin}\n        disabled={handleButtonDisable()}\n      />\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}