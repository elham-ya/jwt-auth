{"ast":null,"code":"var _jsxFileName = \"D:\\\\jwt-auth\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    login\n  } = useJWT();\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    if (email && password) {\n      login(email, password);\n    }\n  };\n\n  const [disable, setDisable] = useState(true);\n\n  const handleDisabledButton = e => {\n    if (e) {\n      setDisable(false);\n    } else setDisable(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"email\",\n      label: \"\\u2709\\uFE0F Email\",\n      type: \"email\",\n      defaultValue: email,\n      onBlur: event => setEmail(event.target.value),\n      autoFocus: true,\n      tabIndex: \"1\",\n      pattern: \".+@example\\\\.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      \"data-testid\": \"password\",\n      label: \"\\uD83D\\uDD11 Password\",\n      type: \"password\",\n      defaultValue: password,\n      onBlur: e => {\n        setPassword(e.target.value);\n      },\n      tabIndex: \"2\",\n      onChange: handleDisabledButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotRobot, {\n      checked: true,\n      onChange: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      type: \"button\",\n      onClick: handleLogin,\n      disabled: disable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"dVbMxOnLvvakUY82avIsbp2FZxo=\", false, function () {\n  return [useJWT, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/jwt-auth/src/Pages/Login.jsx"],"names":["React","useState","useNavigate","Card","Input","NotRobot","LoginButton","ErrorMessage","useJWT","Login","props","email","setEmail","password","setPassword","login","navigate","handleLogin","disable","setDisable","handleDisabledButton","e","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAYP,MAAM,EAAxB;AACA,QAAMQ,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,WAAW,GAAG,MAAM;AACxB,QAAIN,KAAK,IAAIE,QAAb,EAAuB;AACrBE,MAAAA,KAAK,CAACJ,KAAD,EAAQE,QAAR,CAAL;AACD;AACF,GAJD;;AAKA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMmB,oBAAoB,GAAIC,CAAD,IAAO;AAClC,QAAIA,CAAJ,EAAO;AACLF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEOA,UAAU,CAAC,IAAD,CAAV;AACR,GAJD;;AAMA,sBACE,QAAC,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,qBAAY,OADd;AAEE,MAAA,KAAK,EAAC,oBAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,YAAY,EAAER,KAJhB;AAKE,MAAA,MAAM,EAAGW,KAAD,IAAWV,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAL7B;AAME,MAAA,SAAS,MANX;AAOE,MAAA,QAAQ,EAAC,GAPX;AAQE,MAAA,OAAO,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE,QAAC,KAAD;AACE,qBAAY,UADd;AAEE,MAAA,KAAK,EAAC,uBAFR;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,YAAY,EAAEX,QAJhB;AAKE,MAAA,MAAM,EAAGQ,CAAD,IAAO;AACbP,QAAAA,WAAW,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACD,OAPH;AAQE,MAAA,QAAQ,EAAC,GARX;AASE,MAAA,QAAQ,EAAEJ;AATZ;AAAA;AAAA;AAAA;AAAA,YAZF,eAwBE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAE,IAAnB;AAAyB,MAAA,QAAQ,EAAE,MAAM,CAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAzBF,eA2BE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEH,WAApC;AAAiD,MAAA,QAAQ,EAAEC;AAA3D;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjDD;;GAAMT,K;UAGcD,M,EACDN,W;;;KAJbO,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NotRobot from \"../Components/NotRobot\";\nimport LoginButton from \"../Components/LoginButtons\";\nimport ErrorMessage from \"../Components/ErrorMessage\";\nimport useJWT from \"../Hooks/useJWT\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = useJWT();\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    if (email && password) {\n      login(email, password);\n    }\n  };\n  const [disable, setDisable] = useState(true);\n  const handleDisabledButton = (e) => {\n    if (e) {\n      setDisable(false);\n    } else setDisable(true);\n  };\n\n  return (\n    <Card>\n      <h3>Login</h3>\n      <Input\n        data-testid=\"email\"\n        label=\"✉️ Email\"\n        type=\"email\"\n        defaultValue={email}\n        onBlur={(event) => setEmail(event.target.value)}\n        autoFocus\n        tabIndex=\"1\"\n        pattern=\".+@example\\.com\"\n      />\n      <Input\n        data-testid=\"password\"\n        label=\"🔑 Password\"\n        type=\"password\"\n        defaultValue={password}\n        onBlur={(e) => {\n          setPassword(e.target.value);\n        }}\n        tabIndex=\"2\"\n        onChange={handleDisabledButton}\n      />\n\n      <NotRobot checked={true} onChange={() => {}} />\n      <ErrorMessage />\n\n      <LoginButton type=\"button\" onClick={handleLogin} disabled={disable} />\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}